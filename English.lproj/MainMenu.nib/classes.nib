{
    IBClasses = (
        {
            ACTIONS = {
                add10RandomTracksToPlayQueue = id; 
                add25RandomTracksToPlayQueue = id; 
                addFiles = id; 
                addToPlayQueue = id; 
                addTracksWithSameAlbumToPlayQueue = id; 
                addTracksWithSameArtistToPlayQueue = id; 
                addTracksWithSameComposerToPlayQueue = id; 
                addTracksWithSameGenreToPlayQueue = id; 
                browseHighestRated = id; 
                browseLibrary = id; 
                browseMostPopular = id; 
                browseRecentlyAdded = id; 
                browseRecentlyPlayed = id; 
                browseRecentlySkipped = id; 
                browseTracksWithSameAlbum = id; 
                browseTracksWithSameArtist = id; 
                browseTracksWithSameComposer = id; 
                browseTracksWithSameGenre = id; 
                calculateTrackAndAlbumReplayGain = id; 
                calculateTrackReplayGain = id; 
                clearMetadata = id; 
                clearPlayQueue = id; 
                clearReplayGain = id; 
                determinePUIDs = id; 
                editMetadata = id; 
                insertPlaylist = id; 
                insertPlaylistWithSelection = id; 
                insertSmartPlaylist = id; 
                insertWatchFolder = id; 
                jumpToNowPlaying = id; 
                lookupTrackInMusicBrainz = id; 
                playNextStream = id; 
                playPause = id; 
                playPreviousStream = id; 
                playlistInformation = id; 
                prunePlayQueue = id; 
                remove = id; 
                rescanMetadata = id; 
                saveMetadata = id; 
                scramblePlayQueue = id; 
                searchMusicBrainzForMatchingTracks = id; 
                showInformationSheet = id; 
                skipBackward = id; 
                skipForward = id; 
                skipToBeginning = id; 
                skipToEnd = id; 
                toggleBrowser = id; 
                toggleLoopPlayback = id; 
                togglePlayQueue = id; 
                toggleRandomPlayback = id; 
            }; 
            CLASS = FirstResponder; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {
                playNextStream = id; 
                playPause = id; 
                playPreviousStream = id; 
                showPreferences = id; 
            }; 
            CLASS = PlayApplicationDelegate; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {checkForUpdates = id; }; 
            CLASS = SUUpdater; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }
    ); 
    IBVersion = 1; 
}